# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    mailer_transport: smtp
    mailer_user: test

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Application,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.project:
        class: App\Admin\ProjectAdmin
        arguments: [~, App\Entity\Project, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Projects', show_mosaic_button: false }
        public: true

    admin.organisation:
        class: App\Admin\OrganisationAdmin
        arguments: [~, App\Entity\Organisation, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Organisations', show_mosaic_button: true }
        calls:
            - [ setTemplate, [outer_list_rows_mosaic, "SonataAdmin/CRUD/Organisation/list_outer_rows_mosaic.html.twig"] ]
        public: true

    admin.partnership:
        class: App\Admin\PartnershipAdmin
        arguments: [~, App\Entity\Partnership, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Partnerships', show_mosaic_button: false }
        public: true

    admin.partnership_type:
        class: App\Admin\PartnershipTypeAdmin
        arguments: [~, App\Entity\PartnershipType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Partnership Types', show_mosaic_button: false }
        public: true

    admin.contact:
        class: App\Admin\ContactAdmin
        arguments: [~, App\Entity\Contact, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Contacts', show_mosaic_button: false }
        public: true

    admin.staff:
        class: App\Admin\StaffAdmin
        arguments: [~, App\Entity\Staff, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Staff', show_mosaic_button: false }
        public: true

    admin.staff_role:
        class: App\Admin\StaffRoleAdmin
        arguments: [~, App\Entity\StaffRole, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Staff Roles', show_mosaic_button: false }
        public: true

    admin.country:
        class: App\Admin\CountryAdmin
        arguments: [~, App\Entity\Country, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management',  label: 'Countries', show_mosaic_button: true }
        calls:
            - [ setTemplate, [outer_list_rows_mosaic, "SonataAdmin/CRUD/Country/list_outer_rows_mosaic.html.twig"] ]
        public: true

    admin.country_role:
        class: App\Admin\CountryRoleAdmin
        arguments: [~, App\Entity\CountryRole, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Country Roles', show_mosaic_button: false }
        public: true

    admin.sdg:
        class: App\Admin\SDGAdmin
        arguments: [~, App\Entity\SDG, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Sustainable Development Goals', show_mosaic_button: true }
        public: true

    admin.sdg_role:
        class: App\Admin\SDGRoleAdmin
        arguments: [~, App\Entity\SDGRole, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Project management', label: 'Sustainable Development Goals Roles', show_mosaic_button: false }
        public: true

    admin.expenditure:
        class: App\Admin\ExpenditureAdmin
        arguments: [~, App\Entity\Expenditure, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Finance', label: 'Expenditures', show_mosaic_button: false }
        public: true

    admin.sampling_document_type:
        class: App\Admin\SamplingDocumentTypeAdmin
        arguments: [~, App\Entity\SamplingDocumentType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Sampling management', label: 'Sampling Document Types', show_mosaic_button: false }
        public: true

    admin.sampling_documentation:
        class: App\Admin\SamplingDocumentationAdmin
        arguments: [~, App\Entity\SamplingDocumentation, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Sampling management', label: 'Sampling Documentations', show_mosaic_button: false }
        public: true

    admin.sampling_activity:
        class: App\Admin\SamplingActivityAdmin
        arguments: [~, App\Entity\SamplingActivity, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Sampling management', label: 'Sampling Activities', show_mosaic_button: false }
        calls:
            - [ addChild, ['@admin.sampling_documentation'] ]
        public: true

    admin.species:
        class: App\Admin\SpeciesAdmin
        arguments: [~, App\Entity\Species, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Sampling management', label: 'Species', show_mosiac_button: false }
